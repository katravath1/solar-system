name: solar system application testing
on:
  push:
    branches:
    - main
    - 'feature/*'
  workflow_dispatch:
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME : ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
  unit-testing:
    name: CI testing for the nodejs application working
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [18, 19]
        exclude:
        - os: macos-latest
          version: 18
    steps:
    - name: checkout the code
      uses: actions/checkout@v4
    - name: install node js version ${{matrix.version}}
      uses: actions/setup-node@v3
      with:
        node-version: ${{matrix.version}}
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
          # npm cache files are stored in node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: install dependencies
      run: npm install
    - name: test the nodejs code with node test
      run: npm test
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with: 
        name: nodejs-artifact
        path: test-results.xml

  code-coverage:
    needs: unit-testing
    name: code coverage
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: install nodejs
      uses: actions/setup-node@v3
      with: 
        node-version: 18
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
            # npm cache files are stored in node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: install dependencies
      run: npm install
    - name: run code coverage
      run: npm run coverage
      continue-on-error: true
      
    - name: upload code coverage
      uses: actions/upload-artifact@v3
      with: 
        name: coverage-results
        path: coverage
        retention-days: 20

  build-and-push:
    needs: code-coverage
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: github private registry login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN}}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to dockerhub
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          katravath55/github-action-test:latest
          ghcr.io/${{ github.actor}}/solar-system-demo:${{github.run_number}}


  dev-deploy:
    if: github.ref == 'refs/heads/feature/test'
    needs: build-and-push
    uses: ./.github/workflows/resuable-workflow.yaml
    secrets:
      k8s-configfile: ${{ secrets.KUBECONFIG}}

  prod-deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    uses: ./.github/workflows/resuable-workflow.yaml
    secrets:
      k8s-configfile: ${{ secrets.KUBECONFIG}}






